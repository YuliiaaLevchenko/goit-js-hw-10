{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        userSelectedDate = selectedDates[0];\n      console.log(selectedDates[0]);\n    },\n  };\n\n  function addLeadingZero(value) {\n    return toString(value).padStart(2, '0');\n  }\n\n  function convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n  \n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor((ms % day) / hour);\n    // Remaining minutes\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    // Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  \n    return { days, hours, minutes, seconds };\n  }\n  \n  console.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\n  console.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\n  console.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n\nconst datetimePicker = document.getElementById(\"datetime-picker\");\nlet userSelectedDate; \n\nflatpickr(datetimePicker, {\n  ...options,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0]; \n    const currentDate = new Date();\n    console.log(userSelectedDate);\n\n    if (userSelectedDate < currentDate) {\n      window.alert(\"Please choose a date in the future\");\n    } else {\n    }\n  },\n});\n\nconst startButton = document.querySelector('[data-start]');\nlet timerInterval;\nlet timeDifference; \n\nstartButton.addEventListener(\"click\", () => {\n    console.log(\"Current date:\", new Date());\n    console.log(\"Time Difference:\", timeDifference);\n  timeDifference = userSelectedDate - new Date();\n\n  if (timeDifference <= 0) {\n    window.alert(\"Please choose a future date before starting the timer.\");\n    return;\n  }\n\nconst timerDisplay = document.getElementById(\"value\");\nconst timerContainer = document.querySelector('.timer');\n\n  timerInterval = setInterval(() => {\n    const { days, hours, minutes, seconds } = convertMs(timeDifference);\n\n    if (timeDifference <= 0) {\n      clearInterval(timerInterval);\n    } else {\n      timeDifference -= 1000;\n    }\n  }, 1000);\n});"],"names":["options","selectedDates","userSelectedDate","convertMs","ms","days","hours","minutes","seconds","datetimePicker","flatpickr","currentDate","startButton","timerInterval","timeDifference"],"mappings":"oGAKA,MAAMA,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnBC,EAAmBD,EAAc,GACnC,QAAQ,IAAIA,EAAc,EAAE,CAC7B,CACL,EAME,SAASE,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACvC,CAED,QAAQ,IAAIL,EAAU,GAAI,CAAC,EAC3B,QAAQ,IAAIA,EAAU,IAAM,CAAC,EAC7B,QAAQ,IAAIA,EAAU,MAAQ,CAAC,EAEjC,MAAMM,EAAiB,SAAS,eAAe,iBAAiB,EAChE,IAAIP,EAEJQ,EAAUD,EAAgB,CACxB,GAAGT,EACH,QAAQC,EAAe,CACrBC,EAAmBD,EAAc,GACjC,MAAMU,EAAc,IAAI,KACxB,QAAQ,IAAIT,CAAgB,EAExBA,EAAmBS,GACrB,OAAO,MAAM,oCAAoC,CAGpD,CACH,CAAC,EAED,MAAMC,EAAc,SAAS,cAAc,cAAc,EACzD,IAAIC,EACAC,EAEJF,EAAY,iBAAiB,QAAS,IAAM,CAK1C,GAJE,QAAQ,IAAI,gBAAiB,IAAI,IAAM,EACvC,QAAQ,IAAI,mBAAoBE,CAAc,EAChDA,EAAiBZ,EAAmB,IAAI,KAEpCY,GAAkB,EAAG,CACvB,OAAO,MAAM,wDAAwD,EACrE,MACD,CAEkB,SAAS,eAAe,OAAO,EAC7B,SAAS,cAAc,QAAQ,EAEpDD,EAAgB,YAAY,IAAM,CAG5BC,GAAkB,EACpB,cAAcD,CAAa,EAE3BC,GAAkB,GAErB,EAAE,GAAI,CACT,CAAC"}